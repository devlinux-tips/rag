[tool.black]
line-length = 88
target-version = ['py312']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | _build
  | buck-out
  | build
  | dist
  | temp_cache
  | data
)/
'''

[tool.ruff]
line-length = 88
target-version = "py312"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist",
    ".eggs",
    "*.egg-info",
    ".tox",
    ".venv",
    "temp_cache",
    "data",
    "notebooks",
]

[tool.ruff.lint]
select = [
    "E",   # pycodestyle errors
    "W",   # pycodestyle warnings
    "F",   # pyflakes
    "I",   # isort
    "UP",  # pyupgrade
    "B",   # flake8-bugbear
]
# TECHNICAL DEBT: Current ignores preserved from flake8 setup
# TODO: Address these issues systematically in future cleanup
ignore = [
    "E203",  # whitespace before ':' (Black conflict)
    "E501",  # line too long (handled by Black)
    "F401",  # imported but unused (TODO: fix unused imports)
    "F841",  # local variable assigned but never used (TODO: fix unused variables)
    "E402",  # module level import not at top (TODO: fix import organization)
    "W291",  # trailing whitespace (handled by pre-commit)
    "W293",  # blank line contains whitespace (handled by pre-commit)
    "UP035", # typing.Dict is deprecated (TODO: upgrade to Python 3.9+ style)
    "B904",  # exception chaining (TODO: add proper exception chaining)
    "F821",  # undefined name (TODO: fix import issues)
    "E712",  # comparison to True/False (TODO: use is True/is False)
    "UP038", # isinstance with tuple (TODO: use X | Y syntax)
    "F811",  # redefinition of unused variable (TODO: clean up imports)
]

[tool.ruff.lint.isort]
known-first-party = ["src"]

[tool.mypy]
python_version = "3.12"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false  # TODO: Enable after adding type hints
check_untyped_defs = true
exclude = [
    "tests/",
    "notebooks/",
    "temp_cache/",
    "data/",
]

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = "-v --tb=short"
asyncio_mode = "auto"

[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"
